import type { DrawerRootProps } from './controls';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<__VLS_TypePropsToRuntimeProps<DrawerRootProps>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    drag: (percentageDragged: number) => void;
    release: (open: boolean) => void;
    close: () => void;
    "update:open": (open: boolean) => void;
    "update:activeSnapPoint": (val: string | number) => void;
}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<__VLS_TypePropsToRuntimeProps<{
    activeSnapPoint?: string | number | null | undefined;
    closeThreshold?: number | undefined;
    shouldScaleBackground?: boolean | undefined;
    scrollLockTimeout?: number | undefined;
    fixed?: boolean | undefined;
    dismissible?: boolean | undefined;
    modal?: boolean | undefined;
    open?: boolean | undefined;
    defaultOpen?: boolean | undefined;
    nested?: boolean | undefined;
    direction?: import("./types").DrawerDirection | undefined;
} & import("./controls").WithFadeFromProps>> | import("vue").ExtractPropTypes<__VLS_TypePropsToRuntimeProps<{
    activeSnapPoint?: string | number | null | undefined;
    closeThreshold?: number | undefined;
    shouldScaleBackground?: boolean | undefined;
    scrollLockTimeout?: number | undefined;
    fixed?: boolean | undefined;
    dismissible?: boolean | undefined;
    modal?: boolean | undefined;
    open?: boolean | undefined;
    defaultOpen?: boolean | undefined;
    nested?: boolean | undefined;
    direction?: import("./types").DrawerDirection | undefined;
} & import("./controls").WithoutFadeFromProps>>> & {
    onDrag?: ((percentageDragged: number) => any) | undefined;
    onRelease?: ((open: boolean) => any) | undefined;
    onClose?: (() => any) | undefined;
    "onUpdate:open"?: ((open: boolean) => any) | undefined;
    "onUpdate:activeSnapPoint"?: ((val: string | number) => any) | undefined;
}, {} | {}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
