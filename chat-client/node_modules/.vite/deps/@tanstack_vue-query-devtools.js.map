{
  "version": 3,
  "sources": ["../../@tanstack/query-devtools/build/dev.js", "../../@tanstack/vue-query-devtools/src/devtools.vue", "../../@tanstack/vue-query-devtools/src/index.ts"],
  "sourcesContent": ["import { createSignal, render, lazy, setupStyleSheet, createComponent, mergeProps } from './chunk/JAD5ECXD.js';\n\n// src/TanstackQueryDevtools.tsx\nvar TanstackQueryDevtools = class {\n  #client;\n  #onlineManager;\n  #queryFlavor;\n  #version;\n  #isMounted = false;\n  #styleNonce;\n  #shadowDOMTarget;\n  #buttonPosition;\n  #position;\n  #initialIsOpen;\n  #errorTypes;\n  #Component;\n  #dispose;\n  constructor(config) {\n    const {\n      client,\n      queryFlavor,\n      version,\n      onlineManager,\n      buttonPosition,\n      position,\n      initialIsOpen,\n      errorTypes,\n      styleNonce,\n      shadowDOMTarget\n    } = config;\n    this.#client = createSignal(client);\n    this.#queryFlavor = queryFlavor;\n    this.#version = version;\n    this.#onlineManager = onlineManager;\n    this.#styleNonce = styleNonce;\n    this.#shadowDOMTarget = shadowDOMTarget;\n    this.#buttonPosition = createSignal(buttonPosition);\n    this.#position = createSignal(position);\n    this.#initialIsOpen = createSignal(initialIsOpen);\n    this.#errorTypes = createSignal(errorTypes);\n  }\n  setButtonPosition(position) {\n    this.#buttonPosition[1](position);\n  }\n  setPosition(position) {\n    this.#position[1](position);\n  }\n  setInitialIsOpen(isOpen) {\n    this.#initialIsOpen[1](isOpen);\n  }\n  setErrorTypes(errorTypes) {\n    this.#errorTypes[1](errorTypes);\n  }\n  setClient(client) {\n    this.#client[1](client);\n  }\n  mount(el) {\n    if (this.#isMounted) {\n      throw new Error(\"Devtools is already mounted\");\n    }\n    const dispose = render(() => {\n      const _self$ = this;\n      const [btnPosition] = this.#buttonPosition;\n      const [pos] = this.#position;\n      const [isOpen] = this.#initialIsOpen;\n      const [errors] = this.#errorTypes;\n      const [queryClient] = this.#client;\n      let Devtools;\n      if (this.#Component) {\n        Devtools = this.#Component;\n      } else {\n        Devtools = lazy(() => import('./DevtoolsComponent/E3YREIG7.js'));\n        this.#Component = Devtools;\n      }\n      setupStyleSheet(this.#styleNonce, this.#shadowDOMTarget);\n      return createComponent(Devtools, mergeProps({\n        get queryFlavor() {\n          return _self$.#queryFlavor;\n        },\n        get version() {\n          return _self$.#version;\n        },\n        get onlineManager() {\n          return _self$.#onlineManager;\n        },\n        get shadowDOMTarget() {\n          return _self$.#shadowDOMTarget;\n        }\n      }, {\n        get client() {\n          return queryClient();\n        },\n        get buttonPosition() {\n          return btnPosition();\n        },\n        get position() {\n          return pos();\n        },\n        get initialIsOpen() {\n          return isOpen();\n        },\n        get errorTypes() {\n          return errors();\n        }\n      }));\n    }, el);\n    this.#isMounted = true;\n    this.#dispose = dispose;\n  }\n  unmount() {\n    if (!this.#isMounted) {\n      throw new Error(\"Devtools is not mounted\");\n    }\n    this.#dispose?.();\n    this.#isMounted = false;\n  }\n};\n\n// src/TanstackQueryDevtoolsPanel.tsx\nvar TanstackQueryDevtoolsPanel = class {\n  #client;\n  #onlineManager;\n  #queryFlavor;\n  #version;\n  #isMounted = false;\n  #styleNonce;\n  #shadowDOMTarget;\n  #buttonPosition;\n  #position;\n  #initialIsOpen;\n  #errorTypes;\n  #onClose;\n  #Component;\n  #dispose;\n  constructor(config) {\n    const {\n      client,\n      queryFlavor,\n      version,\n      onlineManager,\n      buttonPosition,\n      position,\n      initialIsOpen,\n      errorTypes,\n      styleNonce,\n      shadowDOMTarget,\n      onClose\n    } = config;\n    this.#client = createSignal(client);\n    this.#queryFlavor = queryFlavor;\n    this.#version = version;\n    this.#onlineManager = onlineManager;\n    this.#styleNonce = styleNonce;\n    this.#shadowDOMTarget = shadowDOMTarget;\n    this.#buttonPosition = createSignal(buttonPosition);\n    this.#position = createSignal(position);\n    this.#initialIsOpen = createSignal(initialIsOpen);\n    this.#errorTypes = createSignal(errorTypes);\n    this.#onClose = createSignal(onClose);\n  }\n  setButtonPosition(position) {\n    this.#buttonPosition[1](position);\n  }\n  setPosition(position) {\n    this.#position[1](position);\n  }\n  setInitialIsOpen(isOpen) {\n    this.#initialIsOpen[1](isOpen);\n  }\n  setErrorTypes(errorTypes) {\n    this.#errorTypes[1](errorTypes);\n  }\n  setClient(client) {\n    this.#client[1](client);\n  }\n  setOnClose(onClose) {\n    this.#onClose[1](() => onClose);\n  }\n  mount(el) {\n    if (this.#isMounted) {\n      throw new Error(\"Devtools is already mounted\");\n    }\n    const dispose = render(() => {\n      const _self$ = this;\n      const [btnPosition] = this.#buttonPosition;\n      const [pos] = this.#position;\n      const [isOpen] = this.#initialIsOpen;\n      const [errors] = this.#errorTypes;\n      const [queryClient] = this.#client;\n      const [onClose] = this.#onClose;\n      let Devtools;\n      if (this.#Component) {\n        Devtools = this.#Component;\n      } else {\n        Devtools = lazy(() => import('./DevtoolsPanelComponent/LFXA4CB4.js'));\n        this.#Component = Devtools;\n      }\n      setupStyleSheet(this.#styleNonce, this.#shadowDOMTarget);\n      return createComponent(Devtools, mergeProps({\n        get queryFlavor() {\n          return _self$.#queryFlavor;\n        },\n        get version() {\n          return _self$.#version;\n        },\n        get onlineManager() {\n          return _self$.#onlineManager;\n        },\n        get shadowDOMTarget() {\n          return _self$.#shadowDOMTarget;\n        }\n      }, {\n        get client() {\n          return queryClient();\n        },\n        get buttonPosition() {\n          return btnPosition();\n        },\n        get position() {\n          return pos();\n        },\n        get initialIsOpen() {\n          return isOpen();\n        },\n        get errorTypes() {\n          return errors();\n        },\n        get onClose() {\n          return onClose();\n        }\n      }));\n    }, el);\n    this.#isMounted = true;\n    this.#dispose = dispose;\n  }\n  unmount() {\n    if (!this.#isMounted) {\n      throw new Error(\"Devtools is not mounted\");\n    }\n    this.#dispose?.();\n    this.#isMounted = false;\n  }\n};\n\nexport { TanstackQueryDevtools, TanstackQueryDevtoolsPanel };\n", "<script setup lang=\"ts\">\nimport { onMounted, onScopeDispose, ref, watchEffect } from 'vue'\nimport { onlineManager, useQueryClient } from '@tanstack/vue-query'\nimport { TanstackQueryDevtools } from '@tanstack/query-devtools'\nimport type { DevtoolsOptions } from './types'\n\nconst props = defineProps<DevtoolsOptions>()\n\nconst div = ref<HTMLElement>()\nconst client = props.client || useQueryClient()\nconst devtools = new TanstackQueryDevtools({\n  client,\n  queryFlavor: 'Vue Query',\n  version: '5',\n  onlineManager,\n  buttonPosition: props.buttonPosition,\n  position: props.position,\n  initialIsOpen: props.initialIsOpen,\n  errorTypes: props.errorTypes,\n  styleNonce: props.styleNonce,\n  shadowDOMTarget: props.shadowDOMTarget,\n})\n\nwatchEffect(() => {\n  devtools.setButtonPosition(props.buttonPosition || 'bottom-right')\n  devtools.setPosition(props.position || 'bottom')\n  devtools.setInitialIsOpen(props.initialIsOpen)\n  devtools.setErrorTypes(props.errorTypes || [])\n})\n\nonMounted(() => {\n  devtools.mount(div.value as HTMLElement)\n})\n\nonScopeDispose(() => {\n  devtools.unmount()\n})\n</script>\n\n<template>\n  <div className=\"tsqd-parent-container\" ref=\"div\"></div>\n</template>\n", "import devtools from './devtools.vue'\nimport type { DefineComponent } from 'vue'\nimport type { DevtoolsOptions } from './types'\n\nexport const VueQueryDevtools = (\n  process.env.NODE_ENV !== 'development'\n    ? function () {\n        return null\n      }\n    : devtools\n) as DefineComponent<DevtoolsOptions, {}, unknown>\n"],
  "mappings": "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",
  "names": ["onlineManager", "_a", "devtools"]
}
